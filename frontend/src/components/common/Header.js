import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useAuth } from '../../context/AuthContext';
import { useCart } from '../../hooks/useCart';
import axios from '../../api/axios';
import './Header.css';

const Header = () => {
  const { user, isAuthenticated, isAdmin, logout } = useAuth();
  const { getItemsCount } = useCart();
  const [searchQuery, setSearchQuery] = useState('');
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [categories, setCategories] = useState([]);
  const navigate = useNavigate();

  const handleSearch = (e) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      navigate(`/catalog?search=${searchQuery}`);
    }
  };

  const handleLogout = () => {
    logout();
    navigate('/');
  };

  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  const scrollToTop = () => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  };

  const loadCategories = async () => {
    try {
      const response = await axios.get('/api/categories');
      if (response.data?.data) {
        setCategories(response.data.data);
      } else if (Array.isArray(response)) {
        setCategories(response);
      } else if (response && Array.isArray(response.data)) {
        setCategories(response.data);
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', err);
    }
  };

  useEffect(() => {
    loadCategories();
  }, []);

  return (
    <header className="header">
      <div className="header-top">
        <div className="container">
          <div className="header-top-content">
            <div className="header-contacts">
              <a href="tel:88007700405">8 800 770 04 05</a>
              <span>9:00-21:00 (–ú–°–ö)</span>
            </div>
            <nav className="header-nav">
              <Link to="/about" onClick={scrollToTop}>–û –∫–æ–º–ø–∞–Ω–∏–∏</Link>
              <Link to="/delivery" onClick={scrollToTop}>–î–æ—Å—Ç–∞–≤–∫–∞</Link>
              <Link to="/contacts" onClick={scrollToTop}>–ö–æ–Ω—Ç–∞–∫—Ç—ã</Link>
            </nav>
          </div>
        </div>
      </div>

      <div className="header-main">
        <div className="container">
          <div className="header-main-content">
            <Link to="/" className="logo" onClick={scrollToTop}>
              <h1>–ú–µ–±–µ–ª—å –ú–æ—Å–∫–≤–∞</h1>
            </Link>

            <div className="search-form">
              <input
                type="text"
                className="search-input"
                placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                onKeyPress={(e) => {
                  if (e.key === 'Enter') {
                    handleSearch(e);
                  }
                }}
              />
              <button type="button" className="search-btn" onClick={handleSearch}>
                üîç
              </button>
            </div>

            <div className="header-actions">
              {isAuthenticated() ? (
                <div className="user-menu">
                  <Link to="/profile" className="user-link" onClick={scrollToTop}>
                    {user?.first_name || '–ü—Ä–æ—Ñ–∏–ª—å'}
                  </Link>
                  {isAdmin() && (
                    <Link to="/admin" className="admin-link" onClick={scrollToTop}>
                      –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
                    </Link>
                  )}
                  <button onClick={handleLogout} className="logout-btn">
                    –í—ã—Ö–æ–¥
                  </button>
                </div>
              ) : (
                <Link to="/login" className="login-link">
                  –í–æ–π—Ç–∏
                </Link>
              )}

              <Link to="/cart" className="cart-link" onClick={scrollToTop}>
                üõí –ö–æ—Ä–∑–∏–Ω–∞ {getItemsCount() > 0 && <span className="cart-count">{getItemsCount()}</span>}
              </Link>
            </div>
          </div>
        </div>
      </div>

      <div className="header-nav-main">
        <div className="container">
          <nav className="main-nav">
            <Link to="/catalog" onClick={scrollToTop}>–ö–∞—Ç–∞–ª–æ–≥</Link>
            {categories
              .filter(cat => cat.is_active !== false)
              .slice(0, 4) // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 4 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
              .map(category => (
                <Link 
                  key={category.id} 
                  to={`/catalog?category=${category.slug}`} 
                  onClick={scrollToTop}
                >
                  {category.name}
                </Link>
              ))}
            <Link to="/catalog?is_sale=true" onClick={scrollToTop}>–†–∞—Å–ø—Ä–æ–¥–∞–∂–∞</Link>
          </nav>
        </div>
      </div>

      {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
      {isMobileMenuOpen && (
        <div className="mobile-menu">
          <div className="mobile-menu-content">
            <nav className="mobile-nav">
              <Link to="/catalog" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–ö–∞—Ç–∞–ª–æ–≥</Link>
              <Link to="/catalog?category=beds" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–ö—Ä–æ–≤–∞—Ç–∏</Link>
              <Link to="/catalog?category=wardrobes" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–®–∫–∞—Ñ—ã</Link>
              <Link to="/catalog?category=tables" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–°—Ç–æ–ª—ã</Link>
              <Link to="/catalog?is_sale=true" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–†–∞—Å–ø—Ä–æ–¥–∞–∂–∞</Link>
              <Link to="/help" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–°–ø—Ä–∞–≤–∫–∞</Link>
              <Link to="/about" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–û –∫–æ–º–ø–∞–Ω–∏–∏</Link>
              <Link to="/delivery" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–î–æ—Å—Ç–∞–≤–∫–∞</Link>
              <Link to="/contacts" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–ö–æ–Ω—Ç–∞–∫—Ç—ã</Link>
              {isAuthenticated() ? (
                <>
                  <Link to="/profile" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–ü—Ä–æ—Ñ–∏–ª—å</Link>
                  {isAdmin() && (
                    <Link to="/admin" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</Link>
                  )}
                  <button onClick={() => { handleLogout(); setIsMobileMenuOpen(false); }}>–í—ã—Ö–æ–¥</button>
                </>
              ) : (
                <Link to="/login" onClick={() => { setIsMobileMenuOpen(false); scrollToTop(); }}>–í–æ–π—Ç–∏</Link>
              )}
            </nav>
          </div>
        </div>
      )}
    </header>
  );
};

export default Header;

